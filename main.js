(()=>{"use strict";var n={208:(n,t,e)=>{e.d(t,{A:()=>m});var o=e(354),i=e.n(o),r=e(314),a=e.n(r),d=e(417),c=e.n(d),A=new URL(e(637),e.b),s=new URL(e(814),e.b),l=a()(i()),u=c()(A),p=c()(s);l.push([n.id,`@font-face {\n    font-family: 'intro_rust_gbase_2_line';\n    src: url(${u}) format('woff2');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: 'source_sans_proextralight';\n    src: url(${p}) format('woff2');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-auto-rows: min-content auto auto;\n}\n\nh1 {\n    color: white;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n}\n\nheader {\n    width: 100%;\n    display: flex;\n    padding: 2%;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #1e293b;\n}\n\nheader > h1 {\n    text-shadow: 5px 5px 5px #d1d5db;\n}\n\nform {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 10px;\n    flex-grow: 1;\n\n}\n\nform label {\n    color: white;\n}\n\n.form-controls {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    flex-grow: 1;\n    justify-content: flex-end;\n}\n\nform > .form-controls > input {\n    display: inline-block;\n    height: 25px;\n    flex-grow: 1;\n    min-width: 150px;\n    max-width: 300px;\n    border-radius: 20px;\n    border: none;\n    padding: 2%;\n}\n\nform > .button-container {\n    display: flex;\n    gap: 15px;\n}\n\nform button {\n    display: inline-block;\n    width: 80px;\n    border-radius: 15px;\n    border: none;\n    height: 30px;\n    cursor: pointer;\n    color: white;\n    font-size: 1rem;\n}\n\nform > .form-controls > input:focus {\n    outline: none;\n    border: 2px solid blue;\n}\n\nform button[type="submit"] {\n    background-color: #84cc16;\n}\n\nform button[type="reset"] {\n    background-color: #94a3b8;\n}\n\nform button:hover {\n    box-shadow: 0px 0px 5px 2px #64748b;\n}\n\ndiv.button-container2 {\n    grid-row: 2;\n    grid-column: 1 / span 3;\n    display: none;\n    background-color: #1e293b;\n    padding: 2%;\n    justify-content: flex-end;\n    gap: 20px;\n}\n\ndiv.button-container2 > button {\n    display: inline-block;\n    height: 60px;\n    width: 50px;\n    border-radius: 10px;\n    background-color: #84cc16;\n    color: white;\n    border: none;\n    cursor: pointer;\n    font-size: 1.5rem;\n\n}\n\ndiv.button-container2 > button.active {\n    background-color: #57534e;\n}\n\n\n\ndiv.main-container {\n    padding: 2%;\n    background-color: #1e293b;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    column-gap: 25px;\n    grid-auto-rows: min-content auto;\n    height: 100%;\n    row-gap: 20px;\n    grid-row: 3;\n}\n\ndiv.content-card {\n    text-align: center;\n    height: 340px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border-radius: 20px;\n    background-color: #475569;\n    padding: 4%;\n    color: white;\n    box-shadow: 0px 0px 5px 2px #6366f1;\n}\n\ndiv.current-conditions, div.today-conditions {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    gap: 15px;\n    font-size: 1.1rem;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n    font-weight: 600;\n}\n\ndiv.current-conditions > div, div.today-conditions > div {\n    flex-grow: 1;\n}\n\ndiv.content-card > h1 {\n    font-size: 1.7rem;\n}\n\ndiv.hourly-forecast.content-card {\n    height: max-content;\n    grid-row: 2 / span 1;\n    grid-column: 1 / span 3;\n}\n\ndiv.hours {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\ndiv.every {\n    position: relative;\n    color: #c026d3;\n    flex-grow: 1;\n    padding: 2%;\n    width: 30%;\n    border-radius: 20px;\n    background-color: #1e293b;\n    box-shadow: 0px 0px 5px 2px #6366f1;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n    font-size: 1.8rem;\n    font-weight: 900;\n\n}\n\ndiv.every > div {\n    z-index: 1;\n}\n\n.days.content-card {\n    grid-row: 3;\n    grid-column: 1 / span 3;\n    height: auto;\n}\n\ndiv.title.content-card {\n    grid-column: 1 / span 2;\n}\n\ndiv.days-forecast {\n    display: flex;\n    gap: 20px;\n    flex-wrap: wrap;\n}\n\ndiv.days-forecast > div {\n    flex-grow: 1;\n    font-size: 1.7rem;\n}\n\nh6 {\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n}\n\ndiv.day1info, div.day2info, div.day3info, div.day4info, div.day5info {\n    background-color: #1e293b;\n    padding: 10%;\n    border-radius: 20px;\n}\n\ndiv.title.content-card {\n    padding: 2%;\n    position: relative;\n    text-align: left;    \n}\n\ndiv.title.content-card > div {\n    z-index: 1;\n}\n\n\n    \n\n\n\n\n\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@font-face {\n    font-family: 'intro_rust_gbase_2_line';\n    src: url('./introrustg-base2line-webfont.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: 'source_sans_proextralight';\n    src: url('./sourcesanspro-extralight-webfont.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-auto-rows: min-content auto auto;\n}\n\nh1 {\n    color: white;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n}\n\nheader {\n    width: 100%;\n    display: flex;\n    padding: 2%;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #1e293b;\n}\n\nheader > h1 {\n    text-shadow: 5px 5px 5px #d1d5db;\n}\n\nform {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 10px;\n    flex-grow: 1;\n\n}\n\nform label {\n    color: white;\n}\n\n.form-controls {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    flex-grow: 1;\n    justify-content: flex-end;\n}\n\nform > .form-controls > input {\n    display: inline-block;\n    height: 25px;\n    flex-grow: 1;\n    min-width: 150px;\n    max-width: 300px;\n    border-radius: 20px;\n    border: none;\n    padding: 2%;\n}\n\nform > .button-container {\n    display: flex;\n    gap: 15px;\n}\n\nform button {\n    display: inline-block;\n    width: 80px;\n    border-radius: 15px;\n    border: none;\n    height: 30px;\n    cursor: pointer;\n    color: white;\n    font-size: 1rem;\n}\n\nform > .form-controls > input:focus {\n    outline: none;\n    border: 2px solid blue;\n}\n\nform button[type=\"submit\"] {\n    background-color: #84cc16;\n}\n\nform button[type=\"reset\"] {\n    background-color: #94a3b8;\n}\n\nform button:hover {\n    box-shadow: 0px 0px 5px 2px #64748b;\n}\n\ndiv.button-container2 {\n    grid-row: 2;\n    grid-column: 1 / span 3;\n    display: none;\n    background-color: #1e293b;\n    padding: 2%;\n    justify-content: flex-end;\n    gap: 20px;\n}\n\ndiv.button-container2 > button {\n    display: inline-block;\n    height: 60px;\n    width: 50px;\n    border-radius: 10px;\n    background-color: #84cc16;\n    color: white;\n    border: none;\n    cursor: pointer;\n    font-size: 1.5rem;\n\n}\n\ndiv.button-container2 > button.active {\n    background-color: #57534e;\n}\n\n\n\ndiv.main-container {\n    padding: 2%;\n    background-color: #1e293b;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    column-gap: 25px;\n    grid-auto-rows: min-content auto;\n    height: 100%;\n    row-gap: 20px;\n    grid-row: 3;\n}\n\ndiv.content-card {\n    text-align: center;\n    height: 340px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border-radius: 20px;\n    background-color: #475569;\n    padding: 4%;\n    color: white;\n    box-shadow: 0px 0px 5px 2px #6366f1;\n}\n\ndiv.current-conditions, div.today-conditions {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    gap: 15px;\n    font-size: 1.1rem;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n    font-weight: 600;\n}\n\ndiv.current-conditions > div, div.today-conditions > div {\n    flex-grow: 1;\n}\n\ndiv.content-card > h1 {\n    font-size: 1.7rem;\n}\n\ndiv.hourly-forecast.content-card {\n    height: max-content;\n    grid-row: 2 / span 1;\n    grid-column: 1 / span 3;\n}\n\ndiv.hours {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\ndiv.every {\n    position: relative;\n    color: #c026d3;\n    flex-grow: 1;\n    padding: 2%;\n    width: 30%;\n    border-radius: 20px;\n    background-color: #1e293b;\n    box-shadow: 0px 0px 5px 2px #6366f1;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n    font-size: 1.8rem;\n    font-weight: 900;\n\n}\n\ndiv.every > div {\n    z-index: 1;\n}\n\n.days.content-card {\n    grid-row: 3;\n    grid-column: 1 / span 3;\n    height: auto;\n}\n\ndiv.title.content-card {\n    grid-column: 1 / span 2;\n}\n\ndiv.days-forecast {\n    display: flex;\n    gap: 20px;\n    flex-wrap: wrap;\n}\n\ndiv.days-forecast > div {\n    flex-grow: 1;\n    font-size: 1.7rem;\n}\n\nh6 {\n    font-family: 'intro_rust_gbase_2_line', sans-serif;\n}\n\ndiv.day1info, div.day2info, div.day3info, div.day4info, div.day5info {\n    background-color: #1e293b;\n    padding: 10%;\n    border-radius: 20px;\n}\n\ndiv.title.content-card {\n    padding: 2%;\n    position: relative;\n    text-align: left;    \n}\n\ndiv.title.content-card > div {\n    z-index: 1;\n}\n\n\n    \n\n\n\n\n\n"],sourceRoot:""}]);const m=l},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);o&&a[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),e&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=e):s[2]=e),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},417:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},72:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},a=[],d=0;d<n.length;d++){var c=n[d],A=o.base?c[0]+o.base:c[0],s=r[A]||0,l="".concat(A," ").concat(s);r[A]=s+1;var u=e(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=i(p,o);o.byIndex=d,t.splice(d,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var d=e(r[a]);t[d].references--}for(var c=o(n,i),A=0;A<r.length;A++){var s=e(r[A]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=c}}},659:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},540:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},56:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},113:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},637:(n,t,e)=>{n.exports=e.p+"5dda7e9ab64c58568679.woff2"},814:(n,t,e)=>{n.exports=e.p+"1f9397ed28ee6fcc00a0.woff2"}},t={};function e(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&(!n||!/^http(s?):/.test(n));)n=o[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0;var o=e(72),i=e.n(o),r=e(825),a=e.n(r),d=e(659),c=e.n(d),A=e(56),s=e.n(A),l=e(540),u=e.n(l),p=e(113),m=e.n(p),f=e(208),y={};y.styleTagTransform=m(),y.setAttributes=s(),y.insert=c().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=u(),i()(f.A,y),f.A&&f.A.locals&&f.A.locals;let C=[...document.querySelectorAll(".every")];const x=e.p+"a38ec89338af4551eb0e.svg",h=e.p+"6e4f357e69e53710441a.svg",g=e.p+"4367781d78de4b41c8ba.svg",b=e.p+"f9e79d493e2fd83a55bd.svg",I=e.p+"b3bf211cc12293dba117.svg",B=e.p+"1b7e30503cbfe9b1328f.svg",v=e.p+"f16ddc81302dd032a209.svg",w=e.p+"0ae928911d7143fe5c97.svg",S=e.p+"10da86080cdf8ab805dc.svg";document.querySelector(".title.content-card");let k={snow:x,rain:h,fog:g,wind:b,cloudy:I,"partly-cloudy-day":B,"partly-cloudy-night":v,"clear-day":w,"clear-night":S},q=0;function E(n){const t=localStorage.getItem(n);return t?JSON.parse(t):null}let _,Y=document.querySelector("div.title > h1"),D=document.querySelector(".current-conditions > .datetime"),z=document.querySelector(".current-conditions > .time"),W=document.querySelector(".current-conditions > .feelslike"),F=document.querySelector(".current-conditions > .humidity"),T=document.querySelector(".current-conditions > .precip"),L=document.querySelector(".current-conditions > .sunset"),j=document.querySelector(".current-conditions > .temp"),U=document.querySelector(".day1info > :first-child"),Z=document.querySelector(".day1info > :nth-child(2)"),$=document.querySelector(".day1info > :nth-child(3)"),M=document.querySelector(".day1info > :nth-child(4)"),X=document.querySelector(".day1info > :nth-child(5)"),V=document.querySelector(".day1info > :last-child"),N=document.querySelector(".day2info > :first-child"),R=document.querySelector(".day2info > :nth-child(2)"),P=document.querySelector(".day2info > :nth-child(3)"),O=document.querySelector(".day2info > :nth-child(4)"),H=document.querySelector(".day2info > :nth-child(5)"),J=document.querySelector(".day2info > :last-child"),G=document.querySelector(".day3info > :first-child"),K=document.querySelector(".day3info > :nth-child(2)"),Q=document.querySelector(".day3info > :nth-child(3)"),nn=document.querySelector(".day3info > :nth-child(4)"),tn=document.querySelector(".day3info > :nth-child(5)"),en=document.querySelector(".day3info > :last-child"),on=document.querySelector(".day4info > :first-child"),rn=document.querySelector(".day4info > :nth-child(2)"),an=document.querySelector(".day1info > :nth-child(3)"),dn=document.querySelector(".day4info > :nth-child(4)"),cn=document.querySelector(".day4info > :nth-child(5)"),An=document.querySelector(".day4info > :last-child"),sn=document.querySelector(".day5info > :first-child"),ln=document.querySelector(".day5info > :nth-child(2)"),un=document.querySelector(".day5info > :nth-child(3)"),pn=document.querySelector(".day5info > :nth-child(4)"),mn=document.querySelector(".day5info > :nth-child(5)"),fn=document.querySelector(".day5info > :last-child"),yn=document.querySelector(".today-conditions > :first-child"),Cn=document.querySelector(".today-conditions > :nth-child(2)"),xn=document.querySelector(".today-conditions > :nth-child(3)"),hn=document.querySelector(".today-conditions > :nth-child(4)"),gn=document.querySelector(".today-conditions > :last-child"),bn="°C",In=document.querySelector(".celsius"),Bn=document.querySelector(".fahren");async function vn(n){try{const o=await fetch("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/"+n+"?unitGroup=metric&lang=en&key=QGSDS7CFKXG6SNT9EUKXJMLER&contentType=json",{method:"GET",mode:"cors"});if(!o.ok)throw new Error("error in fetching data");_=await o.json(),document.querySelector(".button-container2").style.display="flex",In.classList.add("active"),Bn.classList.contains("active")&&Bn.classList.remove("active"),e=n,localStorage.setItem("place",JSON.stringify(e)),bn="°C",t=_,Y.textContent=t.resolvedAddress,D.textContent=new Date(t.days[0].datetime).toDateString(),z.textContent=t.currentConditions.datetime.slice(0,5),j.textContent="Temp: "+t.currentConditions.temp+bn,W.textContent="Feels Like: "+t.currentConditions.feelslike+bn,F.textContent="Humidity: "+t.currentConditions.humidity,T.textContent="Precipitation: "+t.currentConditions.precip,L.textContent="Sunset: "+t.currentConditions.sunset.slice(0,5),function(n){U.textContent=new Date(n.days[1].datetime).toDateString(),Z.textContent="temp "+n.days[1].temp+bn,$.textContent="max "+n.days[1].tempmax+bn,M.textContent="min "+n.days[1].tempmin+bn,X.textContent="humidity "+n.days[1].humidity,V.textContent="sunset "+n.days[1].sunset.slice(0,5),N.textContent=new Date(n.days[2].datetime).toDateString(),R.textContent="temp "+n.days[2].temp+bn,P.textContent="max "+n.days[2].tempmax+bn,O.textContent="min "+n.days[2].tempmin+bn,H.textContent="humidity "+n.days[2].humidity,J.textContent="sunset "+n.days[2].sunset.slice(0,5),G.textContent=new Date(n.days[3].datetime).toDateString(),K.textContent="temp "+n.days[3].temp+bn,Q.textContent="max "+n.days[3].tempmax+bn,nn.textContent="min "+n.days[3].tempmin+bn,tn.textContent="humidity "+n.days[3].humidity,en.textContent="sunset "+n.days[3].sunset.slice(0,5),on.textContent=new Date(n.days[4].datetime).toDateString(),rn.textContent="temp "+n.days[4].temp+bn,an.textContent="max "+n.days[4].tempmax+bn,dn.textContent="min "+n.days[4].tempmin+bn,cn.textContent="humidity "+n.days[4].humidity,An.textContent="sunset "+n.days[4].sunset.slice(0,5),sn.textContent=new Date(n.days[5].datetime).toDateString(),ln.textContent="temp "+n.days[5].temp+bn,un.textContent="max "+n.days[5].tempmax+bn,pn.textContent="min "+n.days[5].tempmin+bn,mn.textContent="humidity "+n.days[5].humidity,fn.textContent="sunset "+n.days[5].sunset.slice(0,5)}(_),function(n){yn.textContent="Windspeed: "+n.days[0].windspeed,Cn.textContent="Pressure: "+n.days[0].pressure,xn.textContent="Visibility: "+n.days[0].visibility,hn.textContent="Conditions: "+n.days[0].conditions,gn.textContent="UV Index: "+n.days[0].uvindex}(_),function(n){for(let t=0;t<C.length;++t){document.querySelector(`.every.hour${Sn}`);let e=document.querySelector(`.every.hour${t+1} > :first-child`),o=document.querySelector(`.every.hour${t+1} > :nth-child(2)`),i=document.querySelector(`.every.hour${t+1} > :nth-child(3)`),r=document.querySelector(`.every.hour${t+1} > :nth-child(4)`),a=document.querySelector(`.every.hour${t+1} > :last-child`);e.textContent=n.days[0].hours[t].datetime.slice(0,5),o.textContent="temp: "+n.days[0].hours[t].temp+bn,i.textContent="Feels like: "+n.days[0].hours[t].feelslike+bn,r.textContent="Humidity: "+n.days[0].hours[t].humidity,a.textContent="Conditions: "+n.days[0].hours[t].conditions,Sn+=1,kn+=1}}(_),function(n){let t=document.createElement("style");t.id="dynamic-titleicon-style";let e="",o=n.currentConditions.icon;k[o]?(e=`\n            .title.content-card::before {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                background-image: url(${k[o]});\n                background-position: right;\n                background-repeat: no-repeat;\n                opacity: 0.7;\n                z-index: 0;\n            }\n        `,t.innerHTML=e,document.head.appendChild(t)):console.log("icon not found")}(_),function(n){let t=document.createElement("style");t.id="dynamic-bg-style",document.head.appendChild(t);let e="";for(let t of C){let t=n.days[0].hours[q].icon;e+=`\n            .every.hour${q+1}::before {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                background-image: url(${k[t]});\n                background-size: cover;\n                background-repeat: no-repeat;\n                background-position: center;\n                opacity: 0.2;\n                z-index: 0;\n            }\n        `,q+=1}console.log(e),t.innerHTML=e,q=0}(_)}catch(n){console.log("fetch error"+n)}var t,e}let wn,Sn=1,kn=0;document.querySelector("form").addEventListener("submit",(n=>function(n){n.preventDefault(),Sn=1,kn=0;let t=document.querySelector("form input");t.checkValidity()?(t.setCustomValidity(""),wn=t.value.toLowerCase(),vn(t.value.toLowerCase())):(t.setCustomValidity("Please Enter a Valid City/Country"),t.reportValidity())}(n))),Bn.addEventListener("click",(()=>{return n=_,bn="°F",In.classList.remove("active"),Bn.classList.add("active"),Z.textContent="temp "+(9*n.days[1].temp/5+32).toFixed(1)+bn,$.textContent="max "+(9*n.days[1].tempmax/5+32).toFixed(1)+bn,M.textContent="min "+(9*n.days[1].tempmin/5+32).toFixed(1)+bn,R.textContent="temp "+(9*n.days[2].temp/5+32).toFixed(1)+bn,P.textContent="max "+(9*n.days[2].tempmax/5+32).toFixed(1)+bn,O.textContent="min "+(9*n.days[2].tempmin/5+32).toFixed(1)+bn,K.textContent="temp "+(9*n.days[3].temp/5+32).toFixed(1)+bn,Q.textContent="max "+(9*n.days[3].tempmax/5+32).toFixed(1)+bn,nn.textContent="min "+(9*n.days[3].tempmin/5+32).toFixed(1)+bn,rn.textContent="temp "+(9*n.days[4].temp/5+32).toFixed(1)+bn,an.textContent="max "+(9*n.days[4].tempmax/5+32).toFixed(1)+bn,dn.textContent="min "+(9*n.days[4].tempmin/5+32).toFixed(1)+bn,ln.textContent="temp "+(9*n.days[5].temp/5+32).toFixed(1)+bn,un.textContent="max "+(9*n.days[5].tempmax/5+32).toFixed(1)+bn,pn.textContent="min "+(9*n.days[5].tempmin/5+32).toFixed(1)+bn,j.textContent="Temp: "+(9*n.currentConditions.temp/5+32).toFixed(1)+bn,W.textContent="Feels Like: "+(9*n.currentConditions.feelslike/5+32).toFixed(1)+bn,void C.forEach(((t,e)=>{t.querySelector(":nth-child(2)").textContent="temp: "+(9*n.days[0].hours[e].temp/5+32).toFixed(1)+bn,t.querySelector(":nth-child(3)").textContent="temp: "+(9*n.days[0].hours[e].temp/5+32).toFixed(1)+bn}));var n})),In.addEventListener("click",(()=>vn(E("place")))),window.addEventListener("load",(()=>{vn(E("place")||"dubai")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,